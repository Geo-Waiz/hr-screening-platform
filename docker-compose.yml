version: '3.8'

services:
  frontend:
    build: .
    container_name: hr-screening-frontend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hr-frontend.rule=Host(`app.waiz.cl`)"
      - "traefik.http.routers.hr-frontend.entrypoints=websecure"
      - "traefik.http.routers.hr-frontend.tls=true"
      - "traefik.http.routers.hr-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.hr-frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=dokploy-network"
    networks:
      - dokploy-network

  postgres:
    image: postgres:15-alpine
    container_name: hr-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy-network

  redis:
    image: redis:7-alpine
    container_name: hr-redis
    volumes:
      - redis_data:/data
    networks:
      - dokploy-network

  api:
    image: node:18
    container_name: hr-api
    working_dir: /app
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    env_file: .env
    depends_on:
      - postgres
      - redis
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hr-api.rule=Host(`api.waiz.cl`)"
      - "traefik.http.routers.hr-api.entrypoints=websecure"
      - "traefik.http.routers.hr-api.tls=true"
      - "traefik.http.routers.hr-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.hr-api.loadbalancer.server.port=3000"
      - "traefik.docker.network=dokploy-network"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=https://app.waiz.cl"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=Origin,X-Requested-With,Content-Type,Accept,Authorization,Cache-Control"
      - "traefik.http.middlewares.cors-headers.headers.addvaryheader=true"
      - "traefik.http.routers.hr-api.middlewares=cors-headers"
    entrypoint: >
      sh -c "
        apt-get update -qq &&
        apt-get install -y -qq git &&
        git clone --depth 1 https://github.com/Geo-Waiz/hr-screening-platform.git /tmp/repo &&
        cp -r /tmp/repo/apps/api/* /app/ &&
        npm install --production &&
        npx prisma generate &&
        npx prisma migrate deploy &&
        node src/index.js
      "

volumes:
  postgres_data:
  redis_data:

networks:
  dokploy-network:
    external: true
